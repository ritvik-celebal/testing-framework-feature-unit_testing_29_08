[tool:pytest]
# pytest configuration for CI/CD unit testing

# Test discovery - corrected path
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options - corrected paths
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --cov=src/udp_etl_framework/utils/utils.py
    --cov-report=html:test-reports/htmlcov
    --cov-report=xml:test-reports/coverage.xml
    --cov-report=json:test-reports/coverage.json
    --cov-report=term-missing
    --cov-branch
    --cov-fail-under=80
    --junit-xml=test-reports/test-results.xml

# Minimum version
minversion = 6.0

# Test markers
markers =
    unit: Unit tests that use mocking
    integration: Integration tests that require real dependencies
    slow: Tests that take a long time to run
    databricks: Tests specific to Databricks environment
    cicd: Tests designed for CI/CD pipeline

# Filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage options
[coverage:run]
source = src/udp_etl_framework/utils
branch = True
include = 
    src/udp_etl_framework/utils/utils.py
omit = 
    test_*
    tests/*
    __pycache__/*
    .*
    temp_sonar_analysis/*
    src/udp_etl_framework/source_to_raw/*
    src/udp_etl_framework/notebooks/*
    src/udp_etl_framework/raw_to_silver/*
    src/udp_etl_framework/silver_to_gold/*
    src/udp_etl_framework/common/*

[coverage:report]
show_missing = True
skip_covered = False
fail_under = 80
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = ../../test-reports/htmlcov

[coverage:xml]
output = ../../test-reports/coverage.xml

[coverage:json]
output = ../../test-reports/coverage.json
